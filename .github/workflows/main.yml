name: Main Workflow
on: [push]
  #on:
  #push:
  #  paths:
  #    - 'docker-compose.yml'
env:
  #pushの度に適切な値に更新
  pull_image : mysql:5.7
  pull_image_2 : wordpress:latest
  image_name : mysqlimage:v1
  image_name_2: mywordpressimage:v1
  dns_name: mywordpress-container    #DNSラベル名
  aci_name: testmywordpress    #コンテナインスタンス名

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # リポジトリのチェック
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main
      
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Check file existence
      id: check_files
      uses: andstor/file-existence-action@v2
      with:
        files: "Dockerfile"

    - name: Exist Dockerfile
      if: steps.check_files.outputs.files_exists == 'true'
      uses: ./.github/actions/Dockerfile-exist
      with:
        image_name: ${{ env.image_name_2 }}
        acr_name: ${{ secrets.ACR_NAME }}
        registry_login_server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry_username: ${{ secrets.REGISTRY_USERNAME }}
        registry_password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Not Exist Dockerfile
      if: steps.check_files.outputs.files_exists == 'false'
      uses: ./.github/actions/Dockerfile-not-exist
      with:
        pull_image: ${{ env.pull_image }}
        pull_image_2: ${{ env.pull_image_2 }}
        image_name: ${{ env.image_name }}
        image_name_2: ${{ env.image_name_2 }}
        registry_login_server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry_username: ${{ secrets.REGISTRY_USERNAME }}
        registry_password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: 'Deploy to Azure Container Instances'
      uses: 'azure/aci-deploy@v1.1.3'
      with:
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        dns-name-label: ${{ env.dns_name }}
        image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.image_name_2 }}
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: ${{ env.aci_name }}
        location: 'japanwest'
