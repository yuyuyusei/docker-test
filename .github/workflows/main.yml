name: Main Workflow
on:
  push:
    paths:
      - 'docker-compose.yml'
env:
  #pushの度に適切な値に更新
  pull_image : nginx:latest
  image_name : mynginx:v1
  dns_name: nginx-container    #DNSラベル名
  aci_name: testmynginx    #コンテナインスタンス名
  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    # リポジトリのチェック
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main
      
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Check file existence
      id: check_files
      uses: andstor/file-existence-action@v2
      with:
        files: "Dockerfile"

    - name: Exist Dockerfile
      if: steps.check_files.outputs.files_exists == 'true'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
        az acr build -r ${{ env.acr_name }} -t ${{ env.image_name }} $GITHUB_WORKSPACE

    - name: Not Exist Dockerfile
      if: steps.check_files.outputs.files_exists == 'false'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker pull ${{ env.pull_image }}
        docker tag ${{ env.pull_image }} ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.image_name }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.image_name }}
      
    - name: 'Deploy to Azure Container Instances'
      uses: 'azure/aci-deploy@v1.1.3'
      with:
        resource-group: ${{ secrets.RESOURCE_GROUP }}
        dns-name-label: ${{ env.dns_name }}
        image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ env.image_name }}
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: ${{ env.aci_name }}
        location: 'japanwest'

